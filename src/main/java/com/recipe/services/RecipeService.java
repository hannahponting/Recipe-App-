package com.recipe.services;

import com.recipe.dataaccess.RecipeRepository;
import com.recipe.Recipe;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import java.util.Optional;

import java.util.List;

@Component
public class RecipeService {

    RecipeRepository recipeRepository;
      
    @Autowired
    public RecipeService(RecipeRepository recipeRepository){
        this.recipeRepository = recipeRepository;
    }

    public Recipe addRecipe(Recipe recipe) {

        return null;
    }

  
    public void deleteById(long id){
        recipeRepository.deleteById(id);
    }





    public List<Recipe> findAll(){
        return this.recipeRepository.findAll();
    }

    public Recipe getRecipeById(long recipeId) {
        Optional<Recipe> recipe = this.recipeRepository.findById(recipeId);
        return recipe.orElse(null);

    }
  
  //    public Recipe getrecipeById(Long recipeId) {
//        return null;
//
//        if (recipe.getId() != null) {
//            throw new IllegalArgumentException("The unique ID is generated by the service and does not need to be provided.");
//        }
//        if (recipe.getName() == null){
//            throw new IllegalArgumentException("The recipe must have a name");
//        }
//        if (recipe.getInstructions() == null){
//            throw new IllegalArgumentException("The recipe must have instructions");
//        }
//        if (recipe.getIngredientsList() == null){
//            throw new IllegalArgumentException("The recipe must have instructions");
//        }
//        recipeRepository.save(recipe);
//        return recipe;
//    }




}
